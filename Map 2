package com.example.moon.vendor;

import android.Manifest;
import android.content.pm.PackageManager;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationManager;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.FragmentActivity;
import android.os.Bundle;
import android.widget.Toast;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import java.io.IOException;
import java.util.List;
import java.util.Locale;

public class Home extends FragmentActivity implements OnMapReadyCallback {

    private GoogleMap mMap;
    LocationManager lm;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);
        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);

   Toast.makeText(this,"zzzzzz",Toast.LENGTH_LONG).show();
    }


    /**
     * Manipulates the map once available.
     * This callback is triggered when the map is ready to be used.
     * This is where we can add markers or lines, add listeners or move the camera. In this case,
     * we just add a marker near Sydney, Australia.
     * If Google Play services is not installed on the device, the user will be prompted to install
     * it inside the SupportMapFragment. This method will only be triggered once the user has
     * installed Google Play services and returned to the app.
     */
    @Override
    public void onMapReady(GoogleMap googleMap) {
  Toast.makeText(this,"fffff",Toast.LENGTH_LONG).show();
        mMap = googleMap;

        try {

            LocationManager lm = (LocationManager) getSystemService(LOCATION_SERVICE);
            // String bp=lm.getBestProvider(new Criteria(),true);

            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {

                return;
            }
            Location l = lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);



            double lat = l.getLatitude();
            double lng = l.getLongitude();



            Toast.makeText(this,"" +lat+lng,Toast.LENGTH_LONG).show();
            LatLng ll = new LatLng(lat, lng);


            Geocoder gc = new Geocoder(this);
            List<Address> Al = gc.getFromLocation(lat, lng, 1);

            String result = null;
            result = Al.get(0).getAddressLine(0) + ", " + Al.get(0).getAddressLine(1) + ", " + Al.get(0).getAddressLine(2)+ ", " + Al.get(0).getAddressLine(3)+  ", " +"lat=" + Al.get(0).getLatitude() + ", " +"lng=" + Al.get(0).getLongitude() ;
            Toast.makeText(getApplicationContext(),result,Toast.LENGTH_LONG).show();



               mMap.addMarker(new MarkerOptions().position(ll).title("Current Location"));
               mMap.moveCamera(CameraUpdateFactory.newLatLng(ll));

        }catch (Exception e){


            Toast.makeText(this,e.toString(),Toast.LENGTH_LONG).show();

        }




    }
//For sending the latitude and longitude to the server
    public void postData(String la, String lo) {
        // Create a new HttpClient and Post Header
        HttpClient httpclient = new DefaultHttpClient();
        HttpGet htget = new HttpGet("http://Localhost/Home/Book/"+la+"/"+lo);

        try {
            // Execute HTTP Post Request
            HttpResponse response = httpclient.execute(htget);
            String resp = response.getStatusLine().toString();
            Toast.makeText(this, resp, Toast.LENGTH_LONG).show();


        } catch (ClientProtocolException e) {
            Toast.makeText(this, "Error", Toast.LENGTH_LONG).show();
        } catch (IOException e) {
            Toast.makeText(this, "Error", Toast.LENGTH_LONG).show();
        }
    }
}
